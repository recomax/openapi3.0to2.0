{
  "openapi": "3.0.0",
  "info": {
    "title": "DICT API",
    "version": "1.0.0-RC2",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {
      "name": "Suporte TI BCB",
      "email": "suporte.ti@bcb.gov.br",
      "url": "https://www.bcb.gov.br/estabilidadefinanceira/pagamentosinstantaneos"
    },
    "description": "O Diretório de Identificadores de Contas Transacionais - DICT - é o serviço do arranjo PIX que permite \nbuscar detalhes de contas transacionais  com chaves de endereçamento mais convenientes para quem faz \num pagamento. Entre os tipos de chave atualmente disponíveis estão CPF, CNPJ, telefone, e-mail e EVP.\nAs informações retornadas pelo DICT permitem ao pagador confirmar a identidade do recebedor, proporcionando \numa experiência mais fácil e segura. Permitem também ao PSP do pagador criar a mensagem de instrução de \npagamento a ser enviada para o sistema de liquidação com os detalhes de conta do recebedor.\n\n# Segurança\n## Autenticação \nO DICT utiliza autenticação mútua TLS.\n\nAs definições de autenticação para essa API estão especificados no \n[manual de segurança PIX](https://www.bcb.gov.br/content/estabilidadefinanceira/forumpireunioes/Anexo%20IV%20-%20Manual%20de%20Seguranca%20PIX%20v2.0.pdf)\n\n## Assinatura digital\nRequisições que incluam ou alterem informações no DICT devem ser assinadas com \n[XML Digital Signature](https://www.w3.org/2000/09/xmldsig) pelo participante que envia a requisição.\nRequisições de consulta não precisam ser assinadas. Respostas retornadas pelo DICT serão assinadas digitalmente. \nAs assinaturas **devem** ser validadas pelos clientes da API.\n\nA assinatura será colocada no elemento `Signature` das requisições e respostas. \nO `Signature` será [envelopado](https://www.w3.org/TR/xmldsig-core1/#def-SignatureEnveloped) pelo XML que está \nsendo assinado (assinatura é um elemento filho).\n\nPara mais detalhes sobre a forma de construir a assinatura, consulte o\n[manual de segurança PIX](https://www.bcb.gov.br/content/estabilidadefinanceira/forumpireunioes/Anexo%20IV%20-%20Manual%20de%20Seguranca%20PIX%20v2.0.pdf).\n\n## Limitação de requisições\n\nPara previnir ataques de enumeração, há mecanismo de limitação da quantidade de consultas que podem ser feitas \nnum espaço de tempo (_rate-limiting_). \nA limitação atua em dois níveis, para usuários individuais e para um participante como um todo.\n\nPara cada um desses níveis, há limite para o número de consultas que não resultam em pagamento.\n\nQuando algum desses limites for atingido, o serviço retornará status `429`, especificando a causa.\nCabeçalhos indicando os parâmetros de _rate-limiting_ serão retornados nas requisições. Ver, por exemplo,\nos cabeçalhos retornados ao [consultar vínculo](#operation/getEntry).\n\n# Evolução da API\n\nAs seguintes mudanças são esperadas e consideradas retro-compatíveis (_backwards-compatibility_):\n\n- Adição de novos recursos na API.\n- Adição de novos parâmetros opcionais a requisições.\n- Adição de novos campos em respostas da API.\n- Alteração da ordem de campos.\n- Adição de novos elementos em enumerações\n\nMudanças compatíveis não geram nova versão da API. \nClientes devem estar preparados para lidar com essas mudanças sem quebrar.\n\nMudanças incompatíveis geram nova versão da API.\n\n# Tratamento de erros\n\nO DICT retorna códigos de status HTTP para indicar sucesso ou falhas das requisições. \nCódigos 2xx indicam sucesso. Códigos 4xx indicam falhas causadas pelas informações \nenviadas pelo cliente ou pelo estado atual das entidades. Códigos 5xx indicam problemas \nno serviço no lado do DICT.\n\nAs respostas de erro incluem no corpo detalhes do erro seguindo o schema da RFC \n[Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807).    \nO campo `type` identifica o tipo de erro e no DICT segue o padrão: \n`https://dict.pi.rsfn.net.br/api/v1/error/<TipoErro>`\n\nAbaixo estão listados os tipos de erro do DICT.\n\n\n**Gerais**\n\n- `Forbidden`\n  - Requisição de participante autenticado que viola alguma regra de autorização. \n    Ver [rfc7231](https://tools.ietf.org/html/rfc7231#section-6.5.3).\n\n- `BadRequest`\n  -  Requisição com formato inválido.\n    Ver [rfc7231](https://tools.ietf.org/html/rfc7231#section-6.5.1)\n\n- `NotFound`\n  - Entidade não encontrada. \n    Ver [rfc7231](https://tools.ietf.org/html/rfc7231#section-6.5.4)\n\n- `RateLimited`\n  - Limite de requisições foi atingido. \n    Ver seção sobre [limitação de requisições](#section/Seguranca/Limitacao-de-requisicoes)\n\n- `ServiceUnavailable`\n  - Serviço não está disponível no momento. Serviço solicitado pode estar em manutenção ou fora\n    da janela de funcionamento.\n\n- `RequestSignatureInvalid`\n  - Assinatura digital da requisição enviada é inválida.\n\n- `RequestOnBehalfUnauthorized`\n  - Participante direto envia requisição em nome de participante indireto para o qual não tem autorização.\n\n- `RequestIdAlreadyUsed`\n  - Requisição foi feita com mesmo `RequestId` de requisição feita anteriormente, mas com parâmetros diferentes.\n\n**Vínculos**\n\n- `EntryInvalid`\n  - Existem campos inválidos ao tentar criar novo vínculo.\n\n- `EntryLimitExceeded`\n  - Número de vínculos associados a conta transacional excedeu o limite máximo.\n\n- `EntryAlreadyExists`\n  - Já existe vínculo para essa chave com o mesmo participante e dono.\n\n- `EntryCannotBeQueriedForBookTransfer`\n  - Vínculo consultado está custodiado no mesmo PSP do usuário pagador para quem está sendo feita a consulta.\n    Quando o pagador e o recebedor estão no mesmo PSP, não deve ser feita consulta ao DICT.\n\n- `EntryKeyOwnedByDifferentPerson`\n  - Já existe vínculo para essa chave mas ela é possuída por outra pessoa.\n    Indica-se que seja feita uma reivindicação de posse.\n\n- `EntryKeyInCustodyOfDifferentParticipant`\n  - Já existe vínculo para essa chave com o mesmo dono, mas ela encontra-se associada\n    a outro participante. Indica-se que seja feita uma reivindicação de portabilidade.\n\n- `EntryLockedByClaim`\n  - Existe uma reivindicação com status diferente de concluída ou cancelada para a chave \n    do vínculo. Enquanto estiver nessa situação, o vínculo não pode ser excluído.\n\n**Reivindicações**\n\n- `ClaimInvalid`\n  - Existem campos inválidos ao tentar criar nova reivindicação.\n\n- `ClaimTypeInconsistent`\n  - Tipo de reivindicação pedida é inconsistente. Esse erro ocorre nas situações em que \n  se tenta criar a) reivindicação de _posse_, mas vínculo existente tem como dona a mesma \n  pessoa que reivindica ou b) reinvidicação de _portabilidade_, mas vínculo existente tem \n  como dona pessoa diferente da que reivindica.\n\n- `ClaimKeyNotFound`\n  - Não existe vínculo registrado com a chave que está sendo reivindicada.\n\n- `ClaimAlreadyExistsForKey`\n  - Existe uma reivindicação com status diferente de concluída ou cancelada para a chave reivindicada.\n    Nova reivindicação para a chave só pode ser criada se a atual foi concluída ou cancelada.\n\n- `ClaimResultingEntryAlreadyExists`\n  - Vínculo que resultaria ao processar reivindicação já existe, com mesma chave, participante e dono.\n\n- `ClaimOperationInvalid`\n  - Status atual da reivindicação não permite que operação seja feita.\n\n- `ClaimResolutionPeriodNotEnded`\n  - Para reivindicação de posse, PSP doador não pode __confirmar__ antes do término do período resolução.\n    Para portabilidade, PSP doador não pode __cancelar__ por fim de prazo antes do término do período resolução.\n\n- `ClaimCompletionPeriodNotEnded`\n  - Para reivindicação de posse, se PSP reivindicador tenta encerrar antes do término do período encerramento."
  },
  "servers": [
    {
      "url": "https://dict.pi.rsfn.net.br/api/v1/",
      "description": "Servidor de Produção"
    },
    {
      "url": "https://dict-h.pi.rsfn.net.br/api/v1/",
      "description": "Servidor de Homologação"
    }
  ],
  "tags": [
    {
      "name": "Directory",
      "x-displayName": "Diretório",
      "description": "O diretório de identificadores de contas transacionais é um conjunto de vínculos.\nUm vínculo é uma associação entre uma chave de endereçamento, uma conta transacional e seu dono.\nO dono pode ser uma pessoa física ou uma pessoa jurídica. A chave de endereçamento é usada identificar um vínculo.\n\nOs tipos de chave suportadas atualmente são as seguintes:\n\n|  Tipo         | Exp. regular                                                                                               | Exemplo                              | Comentário                                                                |\n|---------------|------------------------------------------------------------------------------------------------------------|--------------------------------------|---------------------------------------------------------------------------|\n| CPF           |  ^\\[0-9\\]{11}$                                                                                             | 12345678901                          |                                                                           |\n| CNPJ          |  ^\\[0-9\\]{14}$                                                                                             | 12345678901234                       |                                                                           |\n| PHONE         |  ^\\\\+\\[1-9\\]\\[0-9\\]\\d{1,14}$                                                                               | +5510998765432                       |                                                                           |\n| EMAIL         |  [e-mails válidos W3C HTML5](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address)       | pix@bcb.gov.br                       | E-mail deve possuir no máximo 77 caracteres e deve ser em minúsculo       | \n| EVP           |  [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}                                              | 123e4567-e89b-12d3-a456-426655440000 | Endereço Virtual de Pagamento é um tipo de chave é gerado pelo DICT       |\n\n\nNovos tipos de chave poderão vir a ser adicionados no futuro. Logo, é importante que a implementação de clientes\nseja flexível, permitindo a adição de novos tipos de chave."
    },
    {
      "name": "Claim",
      "x-displayName": "Reivindicação",
      "description": "Conforme as chaves mudem de dono ou os usuários finais criem contas transacionais em outros PSPs, \nos seguintes cenários precisarão ser tratados:\n\n1. Houve troca de posse de uma chave (telefone ou email) e o novo dono deseja \ncriar um vínculo para uma conta sua mas o dono anterior já possui vínculo registrado \nno DICT com essa chave.\n2. Um usuário deseja mudar a vinculação de uma chave sua para outra conta, que \nestá domiciliada em um participante diferente do atual.\n\nPara o cenário 1, deve ser criada uma _reivindicação de posse_. Já para o cenário 2,\numa _portabilidade_. Em ambos cenários existirá a figura do PSP que irá ceder a chave (PSP Doador),\ne o PSP que irá receber a chave (PSP Reivindicador). No cenário de _reivindicação de posse_, o PSP \ndoador e o reivindicador podem ser o mesmo.\n\nNessa especificação, _reivindicação_ sem qualificador é usado como termo mais genérico para se referir \ntanto à reivindicação de posse quanto à (reivindicação de) portabilidade.\n\nOs processos de reivindicação são sempre iniciados pelo PSP reivindicador.\nUma reivindicação tem as seguintes situações:\n  - `OPEN` - Aberta pelo reivindicador, mas ainda não recebida pelo doador.\n  - `WAITING_RESOLUTION` - Já foi recebida pelo doador e está aguardando a resolução. Os critérios confirmação\n  ou cancelamento da reivindicação seguem normas específicas a depender do tipo (posse ou portabilidade).\n  - `CONFIRMED` - O doador confirmou a reivindicação. Isso implica a remoção da chave do DICT e da base interna \n  do PSP doador. Está aguardando o reivindicador encerrar o processo.\n  - `CANCELLED` - O doador ou reivindicador cancelou a reivindicação, mantendo o vínculo inalterado (conforme estava antes da \n  reivindicação) tanto no DICT quanto na base interna do PSP.\n  - `COMPLETED` - Tanto o DICT quanto o reivindicador atualizaram suas bases com o novo vínculo.\n\n**Diagrama de estados**\n\n```\n( OPEN )------->( WAITING_RESOLUTION )------->( CONFIRMED )------->( COMPLETED )\n                          |                        /                            \n                          |                       /                             \n                          |                      /                              \n                          |                     /--Apenas para                  \n                          v                    /   reivindicação                \n                    ( CANCELLED )<------------v    de posse                      \n```\n\n**Importante!** \nOs participantes deverão monitorar as reivindicações fazendo _polling_ períodico no _endpoint_\nde [listar reivindicações](#operation/listClaims). A periodicidade adequada dependerá \ndas definições de nível de serviço."
    },
    {
      "name": "Reconciliation",
      "x-displayName": "Reconciliação",
      "description": "A reconciliação permite que o participante identifique inconsistências nos vínculos da sua base de dados interna \ne o DICT. É possível fazer a verificação de forma agregada, sobre todo o conjunto de vínculos, e a verificação de um \nvínculo individual.\n\nPara permitir que a reconciliação seja feita de forma eficiente e segura, toda operação realizada em cima de um vínculo\ngera um identificador de conteúdo, ou CID (_content identifier_). O CID é um número de 256 bits que identifica de forma \núnica o vínculo e todos os seus atributos essenciais (ver seção sobre cálculo do CID). Modifições dos dados essenciais \ndo vínculo implicam na modificação do CID associado a ele.\n\nA verificação agregada dos vínculos é feita com base no _verificador de sincronismo_ (VSync). O participante pode \naferir a igualdade do conjunto de vínculos em seu domínio gerando o VSync (ver seção sobre cálculo do VSync) da sua base \ne criando uma [verificação de sincronismo](#operation/createSyncVerification). A igualdade dos VSyncs do DICT e do \nPSP implica, com altíssima probabilidade, que o conjunto de CIDs é igual. Caso os VSyncs sejam diferentes, o conjunto \nde CIDs é necessariamente diferente, o que significa que há divergências no conjunto de dados de vínculos naquele momento.\n\nAo identificar divergências, PSP poderá [consultar pelo CID](#operation/getEntryByCid), [alterar](#operation/updateEntry),\n[remover](#operation/deleteEntry) ou [criar](#operation/createEntry) vínculos colocando no campo `Reason` das requisições\no valor `RECONCILIATION`.\n\nAs operações feitas no conjunto de vínculos sob domínio do PSP podem ser acompanhadas de forma contínua no \n[log de eventos de CIDs](#operation/listCidSetEvents).\n\nPara obter uma lista completa dos CIDs no DICT relativos a um tipo de chave, um PSP poderá solicitar a \n[criação de um arquivo de CIDs](#operation/createCidSetFile).\n\n## Cálculo de CID\n\nO CID é calculado da seguinte forma:\n\n```\nentryAttributes = keyType \"&\" key \"&\" ownerTaxIdNumber \"&\" ownerName \"&\" ownerTradeName \"&\" participant \"&\" branch \"&\" accountNumber \"&\" accountType\ncidBytes = hmacSha256(requestIdBytes, entryAttributes)\ncid = lowercase-hexadecimal(cidBytes)\n```\nObservações:\n\n- `entryAttributes` é uma string construída pela junção dos atributos essenciais do vínculo, separados por `&`. \n  Todos atributos são strings codificadas em UTF-8. Atributos nulos são codificados com string em branco, \"\".\n- `hmacSha256` é a função HMAC baseada na função de hash SHA-256.\n- `requestIdBytes` são 16 bytes aleatórios, gerados para identificar a requisição que cria o vínculo, usado como chave na função hmacSha256.\n- `cid` é a representação hexadecimal, em lowercase, do resultado da função hmacSha256.\n\nExemplo:\n\n```\nentryAttributes = 'PHONE&+5511987654321&11122233300&João Silva&&12345678&00001&0007654321&CACC'\nrequestIdBytes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\ncid = '28c06eb41c4dc9c3ae114831efcac7446c8747777fca8b145ecd31ff8480ae88'\n```\n\n\n## Cálculo do VSync\n\n\nO VSync é resultado da aplicação de bitwise-XOR ('OU' exclusivo bit-a-bit) sobre todos os CIDs de um determinado \ntipo de chave.\n\nExemplo: \n\n```\ncids = ['28c06eb41c4dc9c3ae114831efcac7446c8747777fca8b145ecd31ff8480ae88', \n        '4d4abb9168114e349672b934d16ed201a919cb49e28b7f66a240e62c92ee007f', \n        'fce514f84f37934bc8aa0f861e4f7392273d71b9d18e8209d21e4192a7842058']\n\nvsync = xor(xor(cids[0], cids[1]), cids[2])  = '996fc1dd3b6b14bcf0c9fe8320eb66d7e2a3fd874ccf767b2e939641b1ea8eaf'\n````\n\nObservações:\n- VSync para um conjunto vazio de CIDs é definido como zero.\n- Há três CIDs no exemplo acima, representados em hexadecimal. A operação bitwise-XOR é feita com os CIDs em formato binário.\n- bitwise-XOR é comutativo, não importa a ordem da sua aplicação.\n- Para calcular o novo VSync resultante da adição de um CID ao conjunto, basta calcular o XOR desse CID com o VSync atual.\n  O novo VSync resultante da remoção de um CID é calculado da mesma forma."
    }
  ],
  "paths": {
    "/entries/": {
      "post": {
        "summary": "Criar Vínculo",
        "description": "Cria um novo vínculo de chave com conta transacional.\n\n### Idempotência\nA operação de criação de vínculo é idempotente. Isso significa que é seguro realizar uma nova tentativa em caso de falhas \ntemporárias, como erros de conexão ou término abrupto de processos. A resposta retornada para uma requisição repetida é \nequivalente à resposta dada à primeira requisição processada.\n\nPara garantir a idempotência da operação, a requisição tem um campo `RequestId`. Esse campo é um \n[UUID versão 4](https://tools.ietf.org/html/rfc4122#section-4.4) e deve ser único no contexto de um mesmo participante. \nO `RequestId` fica associado ao vínculo criado e é usado no cálculo do seu CID (ver seção de reconciliação).\n\nUma requisição de criação é considerada repetida quando o CID do vínculo contido na requisição já existe no DICT.\nCaso seja feita uma requisição com um `RequestId` previamente usado, mas com parâmetros diferentes para o vínculo,\nserá retornado o erro `RequestIdAlreadyUsed`.",
        "operationId": "createEntry",
        "tags": [
          "Directory"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateEntryRequest"
              },
              "examples": {
                "phone": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateEntryRequest>\n    <Signature></Signature>\n    <Entry>\n        <Key>+5561988880000</Key>\n        <KeyType>PHONE</KeyType>\n        <Account>\n            <Participant>12345678</Participant>\n            <Branch>00001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n        </Account>\n        <Owner>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Owner>\n    </Entry>\n    <Reason>USER_REQUESTED</Reason>\n    <RequestId>a946d533-7f22-42a5-9a9b-e87cd55c0f4d</RequestId>\n</CreateEntryRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEntryResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateEntryResponse>\n    <Signature></Signature>\n    <Entry>\n        <Key>11122233300</Key>\n        <KeyType>CPF</KeyType>\n        <Account>\n            <Participant>12345678</Participant>\n            <Branch>00001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n        </Account>\n        <Owner>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Owner>\n        <CreationDate>2019-11-18</CreationDate>\n        <KeyOwnershipDate>2019-11-18</KeyOwnershipDate>\n    </Entry>\n</CreateEntryResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/EntryInvalid"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/entries/{Key}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Key"
          },
          "name": "Key",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Vínculo",
        "tags": [
          "Directory"
        ],
        "description": "Obtém um vínculo contendo os detalhes de conta transacional associados a uma chave de endereçamento.\n\n\n### Limitação de requisições\nA política de limitação (_rate-limiting_) funciona com base em cabeçalhos enviados na requisição.\n\nO parâmetro `PI-PayerId` é o identificador pseudonimizado do usuário final, vinculado a um participante. \nRequisições vindas de um mesmo usuário, para um mesmo participante, devem usar o mesmo identificador. \nComo sugestão de implementação, pode ser utilizado o valor hexadecimal da aplicação de \n[HMAC-SHA-256](https://tools.ietf.org/html/rfc4634#section-7) a um identificador do usuário, \ncom chave de conhecimento restrito ao participante.\n\n### Cache\nConsultas a vínculos podem ter suas respostas _cacheadas_ no PSP, devendo seguir as \ndiretivas contidas no header [`Cache-Control`](https://tools.ietf.org/html/rfc7234#section-5.2).\n\n_Importante_: Para fazer uso de cache, clientes HTTP geralmente precisam ser configurados. Não\né comum que tenham essa funcionalidade habilitada por padrão.",
        "operationId": "getEntry",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}",
              "example": "12345678"
            },
            "in": "header",
            "name": "PI-PayerAccountServicer",
            "description": "Identificador SPB do participante onde o pagador possui conta. Usado para _rate-limiting_.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "pattern": "[0-9a-z]{64}"
            },
            "in": "header",
            "name": "PI-PayerId",
            "description": "Identificador pseudonimizado do pagador que originou a requisição. Usado para _rate-limiting_.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "PI-EndToEndId",
            "description": "Identificador fim-a-fim do pagamento associado a essa requisição. Corresponde ao campo `EndToEndId` na mensagem pacs.008. Usado para _rate-limiting_.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "PI-RateLimit-ClientRemaining": {
                "description": "Número de requisições disponíveis para que limite associado ao `PI-PayerId` seja atingido.",
                "schema": {
                  "type": "integer"
                },
                "example": 100
              },
              "PI-RateLimit-ClientReset": {
                "description": "Segundos até que limite associado ao `PI-PayerId` seja renovado.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              },
              "PI-RateLimit-ParticipantRemaining": {
                "description": "Número de requisições disponíveis para que limite associado ao `PI-PayerAccountServicer` seja atingido.",
                "schema": {
                  "type": "integer"
                },
                "example": 100
              },
              "PI-RateLimit-ParticipantReset": {
                "description": "Segundos até que limite associado ao `PI-PayerAccountServicer` seja renovado.",
                "schema": {
                  "type": "integer"
                },
                "example": 30
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetEntryResponse"
                },
                "examples": {
                  "natural-person": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetEntryResponse>\n    <Signature></Signature>\n    <Entry>\n        <Key>11122233300</Key>\n        <KeyType>CPF</KeyType>\n        <Account>\n            <Participant>12345678</Participant>\n            <Branch>00001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n        </Account>\n        <Owner>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Owner>\n        <CreationDate>2019-11-18</CreationDate>\n        <KeyOwnershipDate>2019-11-18</KeyOwnershipDate>\n    </Entry>\n</GetEntryResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      },
      "put": {
        "summary": "Atualizar Vínculo",
        "tags": [
          "Directory"
        ],
        "description": "Atualiza um vínculo. \n\nA ser utilizado no cenário de atualização da informação da conta de um cliente, permanecendo este no mesmo PSP.\nSomente pode ser atualizada a informação de conta do vínculo. Outras atualizações do vínculo devem ser feitas\npor exclusão/inclusão do vínculo, portabilidade ou reivindicação de posse, a depender da situação.",
        "operationId": "updateEntry",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEntryRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<UpdateEntryRequest>\n    <Signature></Signature>\n    <Key>+5561988887777</Key>\n    <Account>\n        <Participant>12345678</Participant>\n        <Branch>00001</Branch>\n        <AccountNumber>0007654321</AccountNumber>\n        <AccountType>CACC</AccountType>\n    </Account>\n    <Reason>USER_REQUESTED</Reason>\n</UpdateEntryRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEntryResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<UpdateEntryResponse>\n    <Signature></Signature>\n    <Entry>\n        <Key>11122233300</Key>\n        <KeyType>CPF</KeyType>\n        <Account>\n            <Participant>12345678</Participant>\n            <Branch>00001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n        </Account>\n        <Owner>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Owner>\n        <CreationDate>2019-11-18</CreationDate>\n        <KeyOwnershipDate>2019-11-18</KeyOwnershipDate>\n    </Entry>\n</UpdateEntryResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/entries/{Key}/delete": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Key"
          },
          "name": "Key",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Remover Vínculo",
        "operationId": "deleteEntry",
        "description": "Remove um vínculo de chave com conta.",
        "tags": [
          "Directory"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeleteEntryRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<DeleteEntryRequest>\n    <Signature></Signature>\n    <Key>+5561988887777</Key>\n    <Reason>ACCOUNT_CLOSURE</Reason>\n</DeleteEntryRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteEntryResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<DeleteEntryResponse>\n    <Signature></Signature>\n    <Key>+5561988887777</Key>\n</DeleteEntryResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/claims/": {
      "post": {
        "summary": "Criar Reivindicação",
        "description": "Cria uma nova reivindicação. \n\nEssa operação é feita pelo participante reivindicador a pedido do usuário final.\nO vínculo atual permanece inalterado, até que haja a confirmação pelo PSP doador.\n\nNem todo tipo de chave pode ser reivindicado ou portado. A tabela abaixo define as possibilidades:\n\n  |  compatível?  | OWNERSHIP  | PORTABILITY  |\n  |---------------|:----------:|:------------:|\n  | CPF           |            |      ✓       |\n  | CNPJ          |            |      ✓       |\n  | PHONE         |    ✓      |      ✓       |\n  | EMAIL         |    ✓      |      ✓       |\n  | EVP           |            |              |",
        "operationId": "createClaim",
        "tags": [
          "Claim"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateClaimRequest"
              },
              "examples": {
                "phone-claim": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateClaimRequest>\n    <Signature></Signature>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>00001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n    </Claim>\n</CreateClaimRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateClaimResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateClaimResponse>\n    <Signature></Signature>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>00001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n        <DonorParticipant>87654321</DonorParticipant>\n        <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n        <Status>OPEN</Status>\n        <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>\n        <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>\n        <LastModified>2020-01-10T10:00:00Z</LastModified>\n    </Claim>\n</CreateClaimResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ClaimInvalid"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "description": "ISPB do partipante direto ou indireto interessado",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}"
            },
            "name": "Participant",
            "in": "query",
            "required": true
          },
          {
            "description": "Restringe a reivindicações em que o participante é doador",
            "schema": {
              "type": "boolean"
            },
            "name": "IsDonor",
            "in": "query",
            "required": false
          },
          {
            "description": "Restringe a reivindicações em que o participante é reivindicador",
            "schema": {
              "type": "boolean"
            },
            "name": "IsClaimer",
            "in": "query",
            "required": false
          },
          {
            "description": "Status da reivindicação",
            "schema": {
              "$ref": "#/components/schemas/ClaimStatus"
            },
            "name": "Status",
            "in": "query",
            "required": false
          },
          {
            "description": "Tipo de reivindicação",
            "schema": {
              "$ref": "#/components/schemas/ClaimType"
            },
            "name": "Type",
            "in": "query",
            "required": false
          },
          {
            "description": "Filtra reivindicações com data-hora de modificação maior ou igual a `modifiedAfter`",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "ModifiedAfter",
            "in": "query",
            "required": false
          },
          {
            "description": "Filtra reivindicações com data-hora de modificação menor ou igual a `modifiedBefore`",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "ModifiedBefore",
            "in": "query",
            "required": false
          },
          {
            "description": "Número limite de reivindicações a retornar",
            "schema": {
              "type": "integer"
            },
            "name": "Limit",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Listar Reivindicações",
        "description": "Obtém lista de reivindicações em que o participante é doador ou reivindicador.\n\nLista de reivindicações é ordenada de forma crescente pelo campo `LastModified` .",
        "operationId": "listClaims",
        "tags": [
          "Claim"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListClaimsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<ListClaimsResponse>\n    <Signature></Signature>\n    <Claims>\n        <Claim>\n            <Type>OWNERSHIP</Type>\n            <Key>+5561988887777</Key>\n            <KeyType>PHONE</KeyType>\n            <ClaimerAccount>\n                <Participant>12345678</Participant>\n                <Branch>00001</Branch>\n                <AccountNumber>0007654321</AccountNumber>\n                <AccountType>CACC</AccountType>\n            </ClaimerAccount>\n            <Claimer>\n                <Type>NATURAL_PERSON</Type>\n                <TaxIdNumber>11122233300</TaxIdNumber>\n                <Name>João Silva</Name>\n            </Claimer>\n            <DonorParticipant>87654321</DonorParticipant>\n            <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n            <Status>OPEN</Status>\n            <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>\n            <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>\n            <LastModified>2020-01-10T10:00:00Z</LastModified>\n        </Claim>\n    </Claims>\n</ListClaimsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/claims/{ClaimId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "ClaimId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Reivindicação",
        "operationId": "getClaim",
        "description": "Obtém detalhes de uma reivindicação.",
        "tags": [
          "Claim"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetClaimResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetClaimResponse>\n    <Signature></Signature>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>00001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n        <DonorParticipant>87654321</DonorParticipant>\n        <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n        <Status>OPEN</Status>\n        <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>\n        <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>\n        <LastModified>2020-01-10T10:00:00Z</LastModified>\n    </Claim>\n</GetClaimResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/claims/{ClaimId}/acknowledge": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "ClaimId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Receber Reivindicação",
        "operationId": "acknowledgeClaim",
        "description": "Notifica recebimento pelo participante doador de reivindicação com status `OPEN`.",
        "tags": [
          "Claim"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AcknowledgeClaimRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<AcknowledgeClaimRequest>\n    <Signature></Signature>\n    <ClaimId>123e4567-e89b-12d3-a456-426655440000</ClaimId>\n</AcknowledgeClaimRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AcknowledgeClaimResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<AcknowledgeClaimResponse>\n    <Signature></Signature>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>00001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n        <DonorParticipant>87654321</DonorParticipant>\n        <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n        <Status>WAITING_RESOLUTION</Status>\n        <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>\n        <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>\n        <LastModified>2020-01-10T10:00:00Z</LastModified>\n    </Claim>\n</AcknowledgeClaimResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/claims/{ClaimId}/confirm": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "ClaimId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Confirmar Reivindicação",
        "operationId": "confirmClaim",
        "description": "Confirma a operação de reivindicação. \n\nPara reivindicação de posse, status deve ser `WAITING_RESOLUTION` e prazo definido pelo \n campo `ResolutionPeriodEnd` deve ter passado.\n\nPara portabilidade, status deve ser `WAITING_RESOLUTION`.\n\nA tabela abaixo define, a depender da razão e do tipo, quem pode confirmar.\n\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"2\">OWNERSHIP</th>\n      <th colspan=\"2\">PORTABILITY</th>\n    </tr>\n    <tr>\n      <th>Razão</th>\n      <th>Doador</th>\n      <th>Reivindicador</th>\n      <th>Doador</th>\n      <th>Reivindicador</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>USER_REQUESTED</td>\n      <td></td>\n      <td></td>\n      <td>✓</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>ACCOUNT_CLOSURE</td>\n      <td></td>\n      <td></td>\n      <td>✓</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>DEFAULT_OPERATION</td>\n      <td>✓</td>\n      <td></td>\n      <td></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>",
        "tags": [
          "Claim"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmClaimRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<ConfirmClaimRequest>\n    <Signature></Signature>\n    <ClaimId>123e4567-e89b-12d3-a456-426655440000</ClaimId>\n    <Reason>USER_REQUESTED</Reason>\n</ConfirmClaimRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmClaimResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<ConfirmClaimResponse>\n    <Signature></Signature>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>00001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n        <DonorParticipant>87654321</DonorParticipant>\n        <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n        <Status>CONFIRMED</Status>\n        <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>\n        <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>\n        <LastModified>2020-01-10T10:00:00Z</LastModified>\n    </Claim>\n</ConfirmClaimResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/claims/{ClaimId}/cancel": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "ClaimId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Cancelar Reivindicação",
        "operationId": "cancelClaim",
        "description": "Cancela reivindicação. \n        \nPara reivindicação de posse, status deve ser `WAITING_RESOLUTION` ou `CONFIRMED`.\n\nPara portabilidade, status deve ser `WAITING_RESOLUTION`. Se razão de cancelamento for \n`DEFAULT_OPERATION`, prazo definido pelo campo `ResolutionPeriodEnd` deve ter passado.\n\nA tabela abaixo define, a depender da razão e do tipo, quem pode cancelar.\n\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"2\">OWNERSHIP</th>\n      <th colspan=\"2\">PORTABILITY</th>\n    </tr>\n    <tr>\n      <th>Razão</th>\n      <th>Doador</th>\n      <th>Reivindicador</th>\n      <th>Doador</th>\n      <th>Reivindicador</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>USER_REQUESTED</td>\n      <td></td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>ACCOUNT_CLOSURE</td>\n      <td></td>\n      <td>✓</td>\n      <td></td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>FRAUD</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>DEFAULT_OPERATION</td>\n      <td></td>\n      <td></td>\n      <td>✓</td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>",
        "tags": [
          "Claim"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CancelClaimRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CancelClaimRequest>\n    <Signature></Signature>\n    <ClaimId>123e4567-e89b-12d3-a456-426655440000</ClaimId>\n    <Reason>USER_REQUESTED</Reason>\n</CancelClaimRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CancelClaimResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CancelClaimResponse>\n    <Signature></Signature>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>00001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n        <DonorParticipant>87654321</DonorParticipant>\n        <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n        <Status>CANCELLED</Status>\n        <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>\n        <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>\n        <LastModified>2020-01-10T10:00:00Z</LastModified>\n    </Claim>\n</CancelClaimResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/claims/{ClaimId}/complete": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "ClaimId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Concluir Reivindicação",
        "operationId": "completeClaim",
        "description": "Conclui reivindicação pelo reivindicador.\n\nPara reivindicação de posse, status deve ser `CONFIRMED` e prazo definido pelo campo `CompletionPeriodEnd`\ndeve ter passado.\n\nPara portabilidade, status deve ser `CONFIRMED`.\n\n### Idempotência\nA operação de conclusão de reivindicação é idempotente. Valem aqui as mesmas considerações feitas sobre esse tema\nna operação de [Criar Vínculo](#operation/createEntry).",
        "tags": [
          "Claim"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CompleteClaimRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CompleteClaimRequest>\n    <Signature></Signature>\n    <ClaimId>123e4567-e89b-12d3-a456-426655440000</ClaimId>\n    <RequestId>a946d533-7f22-42a5-9a9b-e87cd55c0f4d</RequestId>\n</CompleteClaimRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompleteClaimResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CompleteClaimResponse>\n    <Signature></Signature>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>00001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n        <DonorParticipant>87654321</DonorParticipant>\n        <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n        <Status>COMPLETED</Status>\n        <ResolutionPeriodEnd>2020-01-17T10:00:00Z</ResolutionPeriodEnd>\n        <CompletionPeriodEnd>2020-01-17T10:00:00Z</CompletionPeriodEnd>\n        <LastModified>2020-01-10T10:00:00Z</LastModified>\n    </Claim>\n</CompleteClaimResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/sync-verifications/": {
      "post": {
        "summary": "Verificar Sincronismo",
        "description": "Cria uma verificação de sincronismo para um partipante e tipo de chave.",
        "operationId": "createSyncVerification",
        "tags": [
          "Reconciliation"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateSyncVerificationRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateSyncVerificationRequest>\n    <Signature></Signature>\n    <SyncVerification>\n        <Participant>12345678</Participant>\n        <KeyType>CPF</KeyType>\n        <SyncVerifierLastModified>2020-01-10T10:00:00Z</SyncVerifierLastModified>\n        <SyncVerifier>e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855</SyncVerifier>\n    </SyncVerification>\n</CreateSyncVerificationRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSyncVerificationResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateSyncVerificationResponse>\n    <Signature></Signature>\n    <SyncVerification>\n        <Participant>12345678</Participant>\n        <KeyType>CPF</KeyType>\n        <SyncVerifierLastModified>2020-01-10T10:00:00Z</SyncVerifierLastModified>\n        <SyncVerifier>e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855</SyncVerifier>\n        <Id>1234</Id>\n        <Result>OK</Result>\n    </SyncVerification>\n</CreateSyncVerificationResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/cids/files/": {
      "post": {
        "summary": "Criar Arquivo de CIDs",
        "description": "Cria um arquivo contendo todos os CIDs de um determinado tipo de chave do participante.\nO formato do arquivo é um CID por linha ('\\n' como EOL), sem ordem definida.\n\nGeração do arquivo é feita assincronamente.",
        "operationId": "createCidSetFile",
        "tags": [
          "Reconciliation"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateCidSetFileRequest"
              },
              "examples": {
                "phone": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateCidSetFileRequest>\n    <Signature></Signature>\n    <Participant>12345678</Participant>\n    <KeyType>PHONE</KeyType>\n</CreateCidSetFileRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCidSetFileResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateCidSetFileResponse>\n    <Signature></Signature>\n    <CidSetFile>\n        <Id>1234</Id>\n        <Status>REQUESTED</Status>\n        <Participant>12345678</Participant>\n        <KeyType>PHONE</KeyType>\n        <RequestTime>2020-01-10T10:00:00Z</RequestTime>\n    </CidSetFile>\n</CreateCidSetFileResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/cids/files/{Id}": {
      "get": {
        "summary": "Consultar Arquivo de CIDs",
        "description": "Obtém detalhes do arquivo de CIDs requisitado",
        "operationId": "getCidSetFile",
        "tags": [
          "Reconciliation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCidSetFileResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetCidSetFileResponse>\n    <Signature></Signature>\n    <CidSetFile>\n        <Id>1234</Id>\n        <Status>AVAILABLE</Status>\n        <Participant>12345678</Participant>\n        <KeyType>PHONE</KeyType>\n        <RequestTime>2020-01-10T10:00:00Z</RequestTime>\n        <CreationTime>2020-01-10T10:00:10Z</CreationTime>\n        <Url>https://some_download_url/apath/12345678/dict_file_name.cids</Url>\n        <Bytes>3200000</Bytes>\n        <Sha256>f0e4c2f76c58916ec258f246851bea091d14d4247a2fc3e18694461b1816e13b</Sha256>\n    </CidSetFile>\n</GetCidSetFileResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/cids/events": {
      "get": {
        "parameters": [
          {
            "description": "ISPB do partipante direto ou indireto interessado",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}"
            },
            "name": "Participant",
            "in": "query",
            "required": true
          },
          {
            "description": "Tipo de chave",
            "schema": {
              "$ref": "#/components/schemas/KeyType"
            },
            "name": "KeyType",
            "in": "query",
            "required": true
          },
          {
            "description": "Filtra eventos com data-hora maior ou igual a `StartTime`",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "StartTime",
            "in": "query",
            "required": false
          },
          {
            "description": "Filtra eventos com data-hora menor ou igual a `EndTime`",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "EndTime",
            "in": "query",
            "required": false
          },
          {
            "description": "Número limite de eventos a retornar",
            "schema": {
              "type": "integer"
            },
            "name": "Limit",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Listar Eventos de CIDs",
        "description": "Lista os eventos de CIDs para um tipo de chave do participante, ordenados de forma crescente por `Timestamp`.\n\nA tabela abaixo resume os eventos de CIDs gerados como conseqüência de cada operação.\n\n|  Operação                                            |  Eventos de CID             |\n|------------------------------------------------------|-----------------------------|\n|  [Criar Vínculo](#operation/createEntry)             | adiciona                    |\n|  [Remover Vínculo](#operation/deleteEntry)           | remove                      |\n|  [Atualizar Vínculo](#operation/updateEntry)         | remove e adiciona           |\n|  [Confirmar Reivindicação](#operation/confirmClaim)  | remove (PSP doador)         |\n|  [Concluir Reivindicação](#operation/completeClaim)  | adiciona (PSP reivindicador)|",
        "operationId": "listCidSetEvents",
        "tags": [
          "Reconciliation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListCidSetEventsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<ListCidSetEventsResponse>\n    <Signature></Signature>\n    <Participant>12345678</Participant>\n    <KeyType>CPF</KeyType>\n    <StartTime>2020-01-10T10:00:00Z</StartTime>\n    <EndTime>2020-01-10T11:00:00Z</EndTime>\n    <SyncVerifierStart>ed02457b5c41d964dbd2f2a609d63fe1bb7528dbe55e1abf5b52c249cd735797</SyncVerifierStart>\n    <SyncVerifierEnd>a592f5fb5bef95a3ec8431ebaf609e1af1e4c1b46edb0475394c5595988c748c</SyncVerifierEnd>\n    <CidSetEvents>\n        <CidSetEvent>\n            <Type>ADDED</Type>\n            <Cid>ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb</Cid>\n            <Timestamp>2020-01-10T10:00:00Z</Timestamp>\n        </CidSetEvent>\n        <CidSetEvent>\n            <Type>REMOVED</Type>\n            <Cid>961b6dd3ede3cb8ecbaacbd68de040cd78eb2ed5889130cceb4c49268ea4d506</Cid>\n            <Timestamp>2020-01-10T11:11:11Z</Timestamp>\n        </CidSetEvent>\n    </CidSetEvents>\n</ListCidSetEventsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/cids/entries/{Cid}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Cid"
          },
          "name": "Cid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Vínculo por CID",
        "tags": [
          "Reconciliation"
        ],
        "description": "Obtém detalhes de um vínculo ativo identificado pelo CID",
        "operationId": "getEntryByCid",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetEntryByCidResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetEntryByCidResponse>\n    <Signature></Signature>\n    <Cid>ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb</Cid>\n    <Entry>\n        <Key>11122233300</Key>\n        <KeyType>CPF</KeyType>\n        <Account>\n            <Participant>12345678</Participant>\n            <Branch>00001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n        </Account>\n        <Owner>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Owner>\n        <CreationDate>2019-11-18</CreationDate>\n        <KeyOwnershipDate>2019-11-18</KeyOwnershipDate>\n    </Entry>\n</GetEntryByCidResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountType": {
        "enum": [
          "CACC",
          "SLRY",
          "SVGS"
        ],
        "description": "Tipo de conta, conforme dicionário de domínio para a mensagem pacs.008 do SPI.",
        "example": "CACC",
        "pattern": "[A-Z]{4}"
      },
      "BrazilianAccount": {
        "type": "object",
        "description": "Dados de conta transacional no Brasil.",
        "properties": {
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do provedor da conta"
              }
            ]
          },
          "Branch": {
            "type": "string",
            "description": "Agência, sem dígito verificador.",
            "pattern": "[0-9]{1,4}",
            "example": "0001"
          },
          "AccountNumber": {
            "type": "string",
            "description": "Número de conta, incluindo verificador. Se verificador for letra, substituir por 0.",
            "pattern": "[0-9]{1,20}",
            "example": "0007654321"
          },
          "AccountType": {
            "$ref": "#/components/schemas/AccountType"
          }
        },
        "required": [
          "Participant",
          "AccountNumber",
          "AccountType"
        ]
      },
      "Key": {
        "type": "string",
        "description": "Chave de endereçamento",
        "maxLength": 77,
        "example": "12345678901"
      },
      "KeyType": {
        "type": "string",
        "description": "Tipo de chave. _Novos tipos podem surgir_.",
        "enum": [
          "CPF",
          "CNPJ",
          "PHONE",
          "EMAIL",
          "EVP"
        ],
        "example": "CPF"
      },
      "NaturalPerson": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "default": "NATURAL_PERSON"
          },
          "TaxIdNumber": {
            "type": "string",
            "description": "CPF - Cadastro de Pessoa Física",
            "pattern": "[0-9]{11}",
            "example": "11122233300"
          },
          "Name": {
            "type": "string",
            "description": "Nome completo",
            "example": "João Silva",
            "maxLength": 100
          }
        },
        "required": [
          "Type",
          "TaxIdNumber",
          "Name"
        ]
      },
      "LegalPerson": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "default": "LEGAL_PERSON"
          },
          "TaxIdNumber": {
            "type": "string",
            "description": "CNPJ - Cadastro Nacional de Pessoa Jurídica",
            "example": "11222333000150",
            "pattern": "[0-9]{14}"
          },
          "Name": {
            "type": "string",
            "description": "Razão social",
            "maxLength": 100,
            "example": "Padaria Tres Irmãos Ltda"
          },
          "TradeName": {
            "type": "string",
            "description": "Nome fantasia",
            "maxLength": 100,
            "example": "Padaria 3 Irmãos"
          }
        },
        "required": [
          "Type",
          "TaxIdNumber",
          "Name"
        ]
      },
      "ISPB": {
        "type": "string",
        "pattern": "^[0-9]{8}",
        "example": "12345678"
      },
      "Entry": {
        "type": "object",
        "description": "Vínculo entre uma chave de endereçamento, conta transacional e seu dono.",
        "properties": {
          "Key": {
            "$ref": "#/components/schemas/Key"
          },
          "KeyType": {
            "$ref": "#/components/schemas/KeyType"
          },
          "Account": {
            "$ref": "#/components/schemas/BrazilianAccount"
          },
          "Owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NaturalPerson"
              },
              {
                "$ref": "#/components/schemas/LegalPerson"
              }
            ],
            "discriminator": {
              "propertyName": "Type",
              "mapping": {
                "NATURAL_PERSON": "#/NaturalPerson",
                "LEGAL_PERSON": "#/LegalPerson"
              }
            }
          }
        },
        "required": [
          "KeyType",
          "Account",
          "Owner"
        ]
      },
      "ExtendedEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entry"
          },
          {
            "type": "object",
            "xml": {
              "name": "Entry"
            },
            "properties": {
              "CreationDate": {
                "type": "string",
                "format": "date",
                "description": "Data de criação do vínculo."
              },
              "KeyOwnershipDate": {
                "type": "string",
                "format": "date",
                "description": "Data a partir da qual o dono tem posse ininterrupta da chave de endereçamento. \nPosse da chave aqui é definida pela existência de um vínculo associando a chave ao dono, \npossivelmente com contas distintas."
              }
            },
            "required": [
              "Key",
              "CreationDate",
              "KeyOwnershipDate"
            ]
          }
        ]
      },
      "EntryOperationReason": {
        "type": "string",
        "enum": [
          "USER_REQUESTED",
          "ACCOUNT_CLOSURE",
          "BRANCH_TRANSFER",
          "ENTRY_INACTIVITY",
          "RECONCILIATION"
        ]
      },
      "ClaimStatus": {
        "type": "string",
        "enum": [
          "OPEN",
          "WAITING_RESOLUTION",
          "CONFIRMED",
          "CANCELLED",
          "COMPLETED"
        ]
      },
      "ClaimType": {
        "type": "string",
        "enum": [
          "OWNERSHIP",
          "PORTABILITY"
        ],
        "description": "Tipo de reivindicação"
      },
      "ClaimOperationReason": {
        "type": "string",
        "enum": [
          "USER_REQUESTED",
          "ACCOUNT_CLOSURE",
          "FRAUD",
          "DEFAULT_OPERATION"
        ],
        "description": "Razão da operação"
      },
      "Claim": {
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/ClaimType"
          },
          "Key": {
            "$ref": "#/components/schemas/Key"
          },
          "KeyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeyType"
              },
              {
                "description": "Tipo de chave. CPF e CNPJ são inválidos, não podem ter posse reivindicada."
              }
            ]
          },
          "ClaimerAccount": {
            "$ref": "#/components/schemas/BrazilianAccount"
          },
          "Claimer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NaturalPerson"
              },
              {
                "$ref": "#/components/schemas/LegalPerson"
              }
            ],
            "discriminator": {
              "propertyName": "Type",
              "mapping": {
                "NATURAL_PERSON": "#/NaturalPerson",
                "LEGAL_PERSON": "#/LegalPerson"
              }
            }
          }
        },
        "required": [
          "Key",
          "KeyType",
          "ClaimerAccount",
          "Claimer",
          "Type"
        ]
      },
      "ExtendedClaim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Claim"
          },
          {
            "type": "object",
            "xml": {
              "name": "Claim"
            },
            "properties": {
              "DonorParticipant": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ISPB"
                  },
                  {
                    "description": "Identificador SPB do participante que doa a chave reinvidicada"
                  }
                ]
              },
              "Id": {
                "type": "string",
                "format": "uuid"
              },
              "Status": {
                "$ref": "#/components/schemas/ClaimStatus"
              },
              "ResolutionPeriodEnd": {
                "type": "string",
                "format": "date-time",
                "description": "Data-hora quando termina o período de resolução."
              },
              "CompletionPeriodEnd": {
                "type": "string",
                "format": "date-time",
                "description": "Data-hora quando termina o período de encerramento."
              },
              "LastModified": {
                "type": "string",
                "format": "date-time",
                "description": "Data-hora da última modificação do status da reivindicação"
              }
            },
            "required": [
              "Donor",
              "Id",
              "Status",
              "ResolutionPeriodEnd",
              "CompletionPeriodEnd",
              "LastModified"
            ]
          }
        ]
      },
      "Cid": {
        "type": "string",
        "pattern": "[0-9a-z]{64}",
        "description": "Identificador de conteúdo"
      },
      "CidSetEventType": {
        "type": "string",
        "enum": [
          "ADDED",
          "REMOVED"
        ]
      },
      "CidSetEvent": {
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/CidSetEventType"
          },
          "Cid": {
            "$ref": "#/components/schemas/Cid"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Data-hora do evento"
          }
        }
      },
      "RequestId": {
        "type": "string",
        "format": "uuid",
        "description": "Chave de idempotência da requisição. UUID versão 4."
      },
      "SyncVerificationResult": {
        "type": "string",
        "enum": [
          "OK",
          "NOK"
        ]
      },
      "SyncVerifier": {
        "type": "string",
        "pattern": "[0-9a-z]{64}",
        "example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
      },
      "SyncVerification": {
        "type": "object",
        "properties": {
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante custodiante das chaves"
              }
            ]
          },
          "KeyType": {
            "$ref": "#/components/schemas/KeyType"
          },
          "SyncVerifierLastModified": {
            "type": "string",
            "format": "date-time",
            "description": "Data-hora do último evento que alterou SyncVerifier"
          },
          "SyncVerifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncVerifier"
              },
              {
                "description": "Verificador de sincronismo"
              }
            ]
          }
        },
        "required": [
          "Participant",
          "KeyType",
          "SyncVerifierLastModified",
          "SyncVerifier"
        ]
      },
      "ExtendedSyncVerification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SyncVerification"
          },
          {
            "type": "object",
            "xml": {
              "name": "SyncVerification"
            },
            "properties": {
              "Id": {
                "type": "integer"
              },
              "Result": {
                "$ref": "#/components/schemas/SyncVerificationResult"
              }
            },
            "required": [
              "Id",
              "Result"
            ]
          }
        ]
      },
      "FileStatus": {
        "type": "string",
        "description": "Status de geração do arquivo.",
        "enum": [
          "REQUESTED",
          "PROCESSING",
          "AVAILABLE",
          "ERROR"
        ],
        "example": "AVAILABLE"
      },
      "CidSetFile": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer"
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileStatus"
              },
              {
                "description": "Status de geração do arquivo de CIDs"
              }
            ]
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante custodiante das chaves"
              }
            ]
          },
          "KeyType": {
            "$ref": "#/components/schemas/KeyType"
          },
          "RequestTime": {
            "type": "string",
            "format": "date-time",
            "description": "Data-hora de solicitação da geração do arquivo."
          },
          "CreationTime": {
            "type": "string",
            "format": "date-time",
            "description": "Data-hora em que o arquivo foi gerado. Presente quando status for `AVAILABLE`."
          },
          "Url": {
            "type": "string",
            "description": "URL para download do arquivo. Presente quando status for `AVAILABLE`.",
            "maxLength": 500,
            "example": "https://alguma_url.algum_dominio/algum_path/nome_do_arquivo_gerado_pelo_dict.tipo"
          },
          "Bytes": {
            "type": "integer",
            "description": "Tamanho do arquivo. Presente quando status for `AVAILABLE`."
          },
          "Sha256": {
            "type": "string",
            "description": "SHA256 do conteúdo do arquivo. Presente quando status for `AVAILABLE`.",
            "pattern": "^[A-Fa-f0-9]{64}",
            "example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          }
        },
        "required": [
          "Id",
          "Status",
          "Participant",
          "KeyType",
          "RequestTime"
        ]
      },
      "CreateCidSetFileRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante custodiante das chaves"
              }
            ]
          },
          "KeyType": {
            "$ref": "#/components/schemas/KeyType"
          }
        },
        "required": [
          "Participant",
          "KeyType"
        ]
      },
      "CreateCidSetFileResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "CidSetFile": {
            "$ref": "#/components/schemas/CidSetFile"
          }
        }
      },
      "GetCidSetFileResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "CidSetFile": {
            "$ref": "#/components/schemas/CidSetFile"
          }
        }
      },
      "CreateSyncVerificationRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "SyncVerification": {
            "$ref": "#/components/schemas/SyncVerification"
          }
        },
        "required": [
          "SyncVerification"
        ]
      },
      "CreateSyncVerificationResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "SyncVerification": {
            "$ref": "#/components/schemas/ExtendedSyncVerification"
          }
        },
        "required": [
          "SyncVerification"
        ]
      },
      "ListCidSetEventsResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante custodiante das chaves"
              }
            ]
          },
          "KeyType": {
            "$ref": "#/components/schemas/KeyType"
          },
          "StartTime": {
            "type": "string",
            "format": "date-time",
            "description": "Data-hora do primeiro evento da lista"
          },
          "EndTime": {
            "type": "string",
            "format": "date-time",
            "description": "Data-hora do último evento da lista"
          },
          "SyncVerifierStart": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncVerifier"
              },
              {
                "description": "Verificador de sincronismo antes do primeiro evento"
              }
            ]
          },
          "SyncVerifierEnd": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncVerifier"
              },
              {
                "description": "Verificador de sincronismo após último evento"
              }
            ]
          },
          "CidSetEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CidSetEvent"
            }
          }
        },
        "required": [
          "Participant",
          "KeyType",
          "StartTime",
          "EndTime",
          "SyncVerifierStart",
          "SyncVerifierEnd"
        ]
      },
      "GetEntryByCidResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Cid": {
            "$ref": "#/components/schemas/Cid"
          },
          "Entry": {
            "$ref": "#/components/schemas/ExtendedEntry"
          }
        },
        "required": [
          "Cid",
          "Entry"
        ]
      },
      "CreateClaimRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Claim": {
            "$ref": "#/components/schemas/Claim"
          }
        },
        "required": [
          "Claim"
        ]
      },
      "CreateClaimResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Claim": {
            "$ref": "#/components/schemas/ExtendedClaim"
          }
        },
        "required": [
          "Claim"
        ]
      },
      "AcknowledgeClaimRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ClaimId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "ClaimId"
        ]
      },
      "AcknowledgeClaimResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Claim": {
            "$ref": "#/components/schemas/ExtendedClaim"
          }
        },
        "required": [
          "Claim"
        ]
      },
      "ConfirmClaimRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ClaimId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "ClaimId"
        ]
      },
      "ConfirmClaimResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Claim": {
            "$ref": "#/components/schemas/ExtendedClaim"
          }
        },
        "required": [
          "Claim"
        ]
      },
      "CancelClaimRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ClaimId": {
            "type": "string",
            "format": "uuid"
          },
          "Reason": {
            "$ref": "#/components/schemas/ClaimOperationReason"
          }
        },
        "required": [
          "ClaimId",
          "Reason"
        ]
      },
      "CancelClaimResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Claim": {
            "$ref": "#/components/schemas/ExtendedClaim"
          }
        },
        "required": [
          "Claim"
        ]
      },
      "CompleteClaimRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ClaimId": {
            "type": "string",
            "format": "uuid"
          },
          "Reason": {
            "$ref": "#/components/schemas/ClaimOperationReason"
          },
          "RequestId": {
            "$ref": "#/components/schemas/RequestId"
          }
        },
        "required": [
          "ClaimId",
          "Reason",
          "RequestId"
        ]
      },
      "CompleteClaimResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Claim": {
            "$ref": "#/components/schemas/ExtendedClaim"
          }
        },
        "required": [
          "Claim"
        ]
      },
      "GetClaimResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Claim": {
            "$ref": "#/components/schemas/ExtendedClaim"
          }
        },
        "required": [
          "Claim"
        ]
      },
      "ListClaimsResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedClaim"
            }
          }
        }
      },
      "CreateEntryRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Entry": {
            "$ref": "#/components/schemas/Entry"
          },
          "Reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EntryOperationReason"
              },
              {
                "description": "Valores válidos: `USER_REQUESTED` e `RECONCILIATION`"
              }
            ]
          },
          "RequestId": {
            "$ref": "#/components/schemas/RequestId"
          }
        },
        "required": [
          "Entry",
          "Reason",
          "RequestId"
        ]
      },
      "UpdateEntryRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Key": {
            "$ref": "#/components/schemas/Key"
          },
          "Account": {
            "$ref": "#/components/schemas/BrazilianAccount"
          },
          "Reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EntryOperationReason"
              },
              {
                "description": "Valores válidos: `USER_REQUESTED`, `BRANCH_TRANSFER` e `RECONCILIATION`"
              }
            ]
          }
        },
        "required": [
          "Key",
          "Account",
          "Reason"
        ]
      },
      "UpdateEntryResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Entry": {
            "$ref": "#/components/schemas/ExtendedEntry"
          }
        },
        "required": [
          "Entry"
        ]
      },
      "CreateEntryResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Entry": {
            "$ref": "#/components/schemas/ExtendedEntry"
          }
        },
        "required": [
          "Entry"
        ]
      },
      "DeleteEntryRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Key": {
            "$ref": "#/components/schemas/Key"
          },
          "Reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EntryOperationReason"
              },
              {
                "description": "Valores válidos: `USER_REQUESTED`, `ACCOUNT_CLOSURE`, `ENTRY_INACTIVITY` e `RECONCILIATION`"
              }
            ]
          }
        },
        "required": [
          "Key",
          "Reason"
        ]
      },
      "DeleteEntryResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Key": {
            "$ref": "#/components/schemas/Key"
          }
        },
        "required": [
          "Key"
        ]
      },
      "GetEntryResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Entry": {
            "$ref": "#/components/schemas/ExtendedEntry"
          }
        },
        "required": [
          "Entry"
        ]
      },
      "Problem": {
        "type": "object",
        "xml": {
          "name": "problem",
          "namespace": "urn:ietf:rfc:7807"
        },
        "properties": {
          "type": {
            "type": "string",
            "format": "uri",
            "example": "https://dict.pi.rsfn.net.br/api/v1/error/NotFound"
          },
          "title": {
            "type": "string",
            "example": "Not found"
          },
          "status": {
            "type": "integer",
            "example": 404
          },
          "detail": {
            "type": "string"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Violation"
            }
          }
        },
        "required": [
          "type",
          "title",
          "status"
        ]
      },
      "Violation": {
        "type": "object",
        "xml": {
          "name": "violation"
        },
        "properties": {
          "reason": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "property": {
            "type": "string"
          }
        },
        "required": [
          "reason"
        ]
      }
    },
    "responses": {
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/NotFound</type>\n  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry associated with given key does not exist</detail>\n</problem> "
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/Forbidden</type>\n  <title>Forbidden</title>\n  <status>403</status>\n  <detail>Participant is not allowed to access this resource</detail>\n</problem>"
              }
            }
          }
        }
      },
      "RateLimited": {
        "description": "Rate-Limited",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/RateLimited</type>\n  <title>Rate limited</title>\n  <status>429</status>\n</problem>"
              }
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable",
        "headers": {
          "Retry-After": {
            "schema": {
              "type": "integer"
            },
            "description": "Tempo de espera em segundos sugerido para nova requisição. Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)"
          }
        },
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v1/error/ServiceUnavailable</type>\n  <title>Service Unavailable</title>\n  <status>503</status>\n  <detail>Service is under scheduled maintenance</detail>\n</problem>"
              }
            }
          }
        }
      },
      "ClaimInvalid": {
        "description": "Claim Invalid",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n    <type>https://dict.pi.rsfn.net.br/api/v1/error/ClaimInvalid</type>\n    <title>Claim is invalid</title>\n    <status>400</status>\n    <detail>Claim has invalid fields</detail>\n    <violations>\n        <violation>\n            <reason>Value does not match regex '^\\+[1-9]\\d{1,14}$'</reason>\n            <value>61988887777</value>\n            <property>claim.key</property>\n        </violation>\n    </violations>                    \n</problem>"
              }
            }
          }
        }
      },
      "EntryInvalid": {
        "description": "Entry Invalid",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n    <type>https://dict.pi.rsfn.net.br/api/v1/error/EntryInvalid</type>\n    <title>Entry is invalid</title>\n    <status>400</status>\n    <detail>Entry has invalid fields</detail>\n    <violations>\n        <violation>\n            <reason>Value does not match regex '^\\+[1-9]\\d{1,14}$'</reason>\n            <value>61988887777</value>\n            <property>entry.key</property>\n        </violation>\n    </violations>                    \n</problem>"
              }
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n    <type>https://dict.pi.rsfn.net.br/api/v1/error/BadRequest</type>\n    <title>Bad Request</title>\n    <status>400</status>\n    <detail>Could not parse request body</detail>\n</problem>"
              }
            }
          }
        }
      }
    }
  }
}
